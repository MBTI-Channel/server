# This is a basic workflow to help you get started with Actions
name: node.js CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["14", "16"] # 테스트할 노드 환경
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # node module 캐싱
      - name: Cache node modules
        id: cache-npm
        uses: action/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm 캐시 파일 경로
          path: ~/.npm
          # 캐시를 저장할때 생성되는 키
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          # key로 못찾았다면 찾는 대체키
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # 라이브러리 설치. 일치하는 키가 없다면 설치
      - name: Install Dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        run: npm install

      # 테스트 실행
      - run: npm test
        #env:
        #KEY: ${{ secrets.KEY}}
